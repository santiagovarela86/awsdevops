version: 2.1

orbs:
  terraform: circleci/terraform@2.1.0

jobs:
  lambda_packaging:
    docker:
      - image: cimg/base:2021.07
    steps:
      - checkout
      - run:
          name: Package S3 to SQS Lambda
          command: (cd lambda_s3_to_sqs && zip -r ../lambda_s3_to_sqs.zip .)          
      - run:
          name: Package SQS to DynamoDB Lambda
          command: (cd lambda_sqs_to_dynamodb && zip -r ../lambda_sqs_to_dynamodb.zip .)
      - run:
          name: Package Api Gateway to DynamoDB Lambda
          command: (cd lambda_apigtw_to_dynamodb && zip -r ../lambda_apigtw_to_dynamodb.zip .)
      - persist_to_workspace:
          root: .
          paths:
            - lambda_s3_to_sqs.zip
            - lambda_sqs_to_dynamodb.zip
            - lambda_apigtw_to_dynamodb.zip

  infra_creation:
    docker:
      - image: cimg/base:2021.07
    steps:
      - run:
          name: Update PATH and Define Environment Variable at Runtime
          command: |
            echo 'export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID' >> $BASH_ENV
            echo 'export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY' >> $BASH_ENV
            echo 'export AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION' >> $BASH_ENV
      - checkout
      - attach_workspace:
          at: .
      - terraform/install
      - terraform/apply:
          backend_config: "bucket=$S3_NAME, key=$S3_KEY"

  infra_deletion:
    docker:
      - image: cimg/base:2021.07
    steps:
      - run:
          name: Update PATH and Define Environment Variable at Runtime
          command: |
            echo 'export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID' >> $BASH_ENV
            echo 'export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY' >> $BASH_ENV
            echo 'export AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION' >> $BASH_ENV
      - checkout
      - attach_workspace:
          at: .
      - terraform/install
      - terraform/destroy:
          backend_config: "bucket=$S3_NAME, key=$S3_KEY"

workflows:
  workflow:
    jobs:
      - lambda_packaging
      - infra_creation:
          requires:
            - lambda_packaging
      - infra_deletion:
          requires:
            - infra_creation
